# HTTP Server.
[server]
	address        = "0.0.0.0:8199"
	serverAgent    = "My GoFrame HTTP Server"
    openapiPath    = "/api.json"
    swaggerPath    = "/redoc" # /swagger使用本地静态文件实现，所以此处不能设置路径为/swagger
    lang           = "zh-CN"  # 与i18n文件名对应,zh-CN、en目前只支持这2个
    serverRoot     = "/resource/public"  # 开启静态文件目录，支持swaggerUI

    errorLogPattern     = "error-{Y-m-d}.log"

[logger]
    path   = "/var/log/my-goframe/"
    file   = "{Y-m-d}.log"
    level  = "all"
    rotateExpire = "1d"  # 一天一个回滚
    rotateBackupLimit =  7   # 保留7个日志文件
    writerColorEnable = true  # 日志文件带有颜色
    RotateBackupCompress =  9  # 日志文件压缩级别，0-9,9最高
    stdout = false  # 禁用标准输出，只输出到文件
    Flags = 44 #日期 时:分:秒:毫秒 文件:行号

[token]
    timeout = 600000  # 单位：毫秒,10分钟
    cacheMode = 1  # 使用的缓存模式，1为内存模式，2为redis模式，默认为1

# Redis数据库配置
[redis.default]
    address = "192.168.212.117:6379"
    db      = 0
    pass    = "7a38d7c46ca4798c7767"

# Database configurations.
[database]
    [database.default]
        link  = "mysql:root:mysql@tcp(192.168.212.117:3306)/mygf"
        debug = true

# GF-CLI工具配置
[gfcli]
    # 自定义DAO生成配置(默认是读取database配置)
    [[gfcli.gen.dao]]
        link   = "mysql:root:mysql@tcp(192.168.212.117:3306)/mygf"
        descriptionTag =   true
        noModelComment =   true
        removePrefix =     "gf_"
    [gfcli.build]
        name=      "mygf-app"
        path=      "../bin"
        arch=      "amd64"
        system=    "linux"
        mod=       "none"
        cgo=       0
        pack=      "manifest/config,resource/i18n,resource/public"
        version=   ""
        output=    ""
        extra=     ""